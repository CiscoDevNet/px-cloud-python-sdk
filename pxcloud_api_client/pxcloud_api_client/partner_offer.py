# coding: utf-8

"""
    PX Cloud for Success Tracks API

    PX Cloud for Success Tracks API  # noqa: E501

    The version of the OpenAPI document: 0.9.11
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pxcloud_api_client import schemas  # noqa: F401


class PartnerOffer(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            accTimeRequiredHours = schemas.Float32Schema
            created = schemas.DateTimeSchema
            createdBy = schemas.StrSchema
            
            
            class customerList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomerInfo']:
                        return CustomerInfo
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['CustomerInfo'], typing.List['CustomerInfo']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customerList':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomerInfo':
                    return super().__getitem__(i)
            customerRating = schemas.Float64Schema
            description = schemas.StrSchema
            duration = schemas.Int64Schema
            imageFileName = schemas.StrSchema
            language = schemas.StrSchema
            lastPublishedDate = schemas.DateTimeSchema
            logoFileName = schemas.StrSchema
            
            
            class mapping(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['SuccessTrackMapping']:
                        return SuccessTrackMapping
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['SuccessTrackMapping'], typing.List['SuccessTrackMapping']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'mapping':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'SuccessTrackMapping':
                    return super().__getitem__(i)
            modified = schemas.DateTimeSchema
            modifiedBy = schemas.StrSchema
            noOfAttendees = schemas.Int64Schema
            offerId = schemas.StrSchema
            offerType = schemas.StrSchema
            publishedToAllCustomers = schemas.BoolSchema
            status = schemas.StrSchema
            title = schemas.StrSchema
            userEmailId = schemas.StrSchema
            userFirstName = schemas.StrSchema
            userLastName = schemas.StrSchema
            __annotations__ = {
                "accTimeRequiredHours": accTimeRequiredHours,
                "created": created,
                "createdBy": createdBy,
                "customerList": customerList,
                "customerRating": customerRating,
                "description": description,
                "duration": duration,
                "imageFileName": imageFileName,
                "language": language,
                "lastPublishedDate": lastPublishedDate,
                "logoFileName": logoFileName,
                "mapping": mapping,
                "modified": modified,
                "modifiedBy": modifiedBy,
                "noOfAttendees": noOfAttendees,
                "offerId": offerId,
                "offerType": offerType,
                "publishedToAllCustomers": publishedToAllCustomers,
                "status": status,
                "title": title,
                "userEmailId": userEmailId,
                "userFirstName": userFirstName,
                "userLastName": userLastName,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accTimeRequiredHours"]) -> MetaOapg.properties.accTimeRequiredHours: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdBy"]) -> MetaOapg.properties.createdBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerList"]) -> MetaOapg.properties.customerList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerRating"]) -> MetaOapg.properties.customerRating: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["duration"]) -> MetaOapg.properties.duration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["imageFileName"]) -> MetaOapg.properties.imageFileName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["language"]) -> MetaOapg.properties.language: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPublishedDate"]) -> MetaOapg.properties.lastPublishedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["logoFileName"]) -> MetaOapg.properties.logoFileName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mapping"]) -> MetaOapg.properties.mapping: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified"]) -> MetaOapg.properties.modified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modifiedBy"]) -> MetaOapg.properties.modifiedBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noOfAttendees"]) -> MetaOapg.properties.noOfAttendees: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["offerId"]) -> MetaOapg.properties.offerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["offerType"]) -> MetaOapg.properties.offerType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["publishedToAllCustomers"]) -> MetaOapg.properties.publishedToAllCustomers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userEmailId"]) -> MetaOapg.properties.userEmailId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userFirstName"]) -> MetaOapg.properties.userFirstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userLastName"]) -> MetaOapg.properties.userLastName: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["accTimeRequiredHours", "created", "createdBy", "customerList", "customerRating", "description", "duration", "imageFileName", "language", "lastPublishedDate", "logoFileName", "mapping", "modified", "modifiedBy", "noOfAttendees", "offerId", "offerType", "publishedToAllCustomers", "status", "title", "userEmailId", "userFirstName", "userLastName", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accTimeRequiredHours"]) -> typing.Union[MetaOapg.properties.accTimeRequiredHours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdBy"]) -> typing.Union[MetaOapg.properties.createdBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerList"]) -> typing.Union[MetaOapg.properties.customerList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerRating"]) -> typing.Union[MetaOapg.properties.customerRating, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["duration"]) -> typing.Union[MetaOapg.properties.duration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["imageFileName"]) -> typing.Union[MetaOapg.properties.imageFileName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["language"]) -> typing.Union[MetaOapg.properties.language, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPublishedDate"]) -> typing.Union[MetaOapg.properties.lastPublishedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["logoFileName"]) -> typing.Union[MetaOapg.properties.logoFileName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mapping"]) -> typing.Union[MetaOapg.properties.mapping, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified"]) -> typing.Union[MetaOapg.properties.modified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modifiedBy"]) -> typing.Union[MetaOapg.properties.modifiedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noOfAttendees"]) -> typing.Union[MetaOapg.properties.noOfAttendees, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["offerId"]) -> typing.Union[MetaOapg.properties.offerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["offerType"]) -> typing.Union[MetaOapg.properties.offerType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["publishedToAllCustomers"]) -> typing.Union[MetaOapg.properties.publishedToAllCustomers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userEmailId"]) -> typing.Union[MetaOapg.properties.userEmailId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userFirstName"]) -> typing.Union[MetaOapg.properties.userFirstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userLastName"]) -> typing.Union[MetaOapg.properties.userLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["accTimeRequiredHours", "created", "createdBy", "customerList", "customerRating", "description", "duration", "imageFileName", "language", "lastPublishedDate", "logoFileName", "mapping", "modified", "modifiedBy", "noOfAttendees", "offerId", "offerType", "publishedToAllCustomers", "status", "title", "userEmailId", "userFirstName", "userLastName", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        accTimeRequiredHours: typing.Union[MetaOapg.properties.accTimeRequiredHours, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, str, datetime, schemas.Unset] = schemas.unset,
        createdBy: typing.Union[MetaOapg.properties.createdBy, str, schemas.Unset] = schemas.unset,
        customerList: typing.Union[MetaOapg.properties.customerList, list, tuple, schemas.Unset] = schemas.unset,
        customerRating: typing.Union[MetaOapg.properties.customerRating, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        duration: typing.Union[MetaOapg.properties.duration, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        imageFileName: typing.Union[MetaOapg.properties.imageFileName, str, schemas.Unset] = schemas.unset,
        language: typing.Union[MetaOapg.properties.language, str, schemas.Unset] = schemas.unset,
        lastPublishedDate: typing.Union[MetaOapg.properties.lastPublishedDate, str, datetime, schemas.Unset] = schemas.unset,
        logoFileName: typing.Union[MetaOapg.properties.logoFileName, str, schemas.Unset] = schemas.unset,
        mapping: typing.Union[MetaOapg.properties.mapping, list, tuple, schemas.Unset] = schemas.unset,
        modified: typing.Union[MetaOapg.properties.modified, str, datetime, schemas.Unset] = schemas.unset,
        modifiedBy: typing.Union[MetaOapg.properties.modifiedBy, str, schemas.Unset] = schemas.unset,
        noOfAttendees: typing.Union[MetaOapg.properties.noOfAttendees, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        offerId: typing.Union[MetaOapg.properties.offerId, str, schemas.Unset] = schemas.unset,
        offerType: typing.Union[MetaOapg.properties.offerType, str, schemas.Unset] = schemas.unset,
        publishedToAllCustomers: typing.Union[MetaOapg.properties.publishedToAllCustomers, bool, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        userEmailId: typing.Union[MetaOapg.properties.userEmailId, str, schemas.Unset] = schemas.unset,
        userFirstName: typing.Union[MetaOapg.properties.userFirstName, str, schemas.Unset] = schemas.unset,
        userLastName: typing.Union[MetaOapg.properties.userLastName, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PartnerOffer':
        return super().__new__(
            cls,
            *_args,
            accTimeRequiredHours=accTimeRequiredHours,
            created=created,
            createdBy=createdBy,
            customerList=customerList,
            customerRating=customerRating,
            description=description,
            duration=duration,
            imageFileName=imageFileName,
            language=language,
            lastPublishedDate=lastPublishedDate,
            logoFileName=logoFileName,
            mapping=mapping,
            modified=modified,
            modifiedBy=modifiedBy,
            noOfAttendees=noOfAttendees,
            offerId=offerId,
            offerType=offerType,
            publishedToAllCustomers=publishedToAllCustomers,
            status=status,
            title=title,
            userEmailId=userEmailId,
            userFirstName=userFirstName,
            userLastName=userLastName,
            _configuration=_configuration,
            **kwargs,
        )

from pxcloud_api_client.pxcloud_api_client.customer_info import CustomerInfo
from pxcloud_api_client.pxcloud_api_client.success_track_mapping import SuccessTrackMapping
