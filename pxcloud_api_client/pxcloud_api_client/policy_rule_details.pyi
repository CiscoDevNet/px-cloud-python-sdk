# coding: utf-8

"""
    PX Cloud for Success Tracks API

    PX Cloud for Success Tracks API  # noqa: E501

    The version of the OpenAPI document: 0.9.11
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pxcloud_api_client import schemas  # noqa: F401


class PolicyRuleDetails(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            policyName = schemas.StrSchema
            policyDescription = schemas.StrSchema
            policyId = schemas.StrSchema
            ruleId = schemas.StrSchema
            __annotations__ = {
                "policyName": policyName,
                "policyDescription": policyDescription,
                "policyId": policyId,
                "ruleId": ruleId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["policyName"]) -> MetaOapg.properties.policyName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["policyDescription"]) -> MetaOapg.properties.policyDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["policyId"]) -> MetaOapg.properties.policyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ruleId"]) -> MetaOapg.properties.ruleId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["policyName", "policyDescription", "policyId", "ruleId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["policyName"]) -> typing.Union[MetaOapg.properties.policyName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["policyDescription"]) -> typing.Union[MetaOapg.properties.policyDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["policyId"]) -> typing.Union[MetaOapg.properties.policyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ruleId"]) -> typing.Union[MetaOapg.properties.ruleId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["policyName", "policyDescription", "policyId", "ruleId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        policyName: typing.Union[MetaOapg.properties.policyName, str, schemas.Unset] = schemas.unset,
        policyDescription: typing.Union[MetaOapg.properties.policyDescription, str, schemas.Unset] = schemas.unset,
        policyId: typing.Union[MetaOapg.properties.policyId, str, schemas.Unset] = schemas.unset,
        ruleId: typing.Union[MetaOapg.properties.ruleId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PolicyRuleDetails':
        return super().__new__(
            cls,
            *_args,
            policyName=policyName,
            policyDescription=policyDescription,
            policyId=policyId,
            ruleId=ruleId,
            _configuration=_configuration,
            **kwargs,
        )
