# coding: utf-8

"""
    PX Cloud for Success Tracks API

    PX Cloud for Success Tracks API  # noqa: E501

    The version of the OpenAPI document: 0.9.11
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pxcloud_api_client import schemas  # noqa: F401


class Faults(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            severity = schemas.StrSchema
            title = schemas.StrSchema
            lastOccurence = schemas.DateTimeSchema
            condition = schemas.StrSchema
            
            
            class caseAutomation(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "enabled": "ENABLED",
                        "disabled": "DISABLED",
                    }
                
                @schemas.classproperty
                def ENABLED(cls):
                    return cls("enabled")
                
                @schemas.classproperty
                def DISABLED(cls):
                    return cls("disabled")
            faultId = schemas.IntSchema
            category = schemas.StrSchema
            openCases = schemas.IntSchema
            affectedAssets = schemas.IntSchema
            occurences = schemas.IntSchema
            ignoredAssets = schemas.IntSchema
            mgmtSystemType = schemas.StrSchema
            mgmtSystemAddr = schemas.StrSchema
            mgmtSystemHostname = schemas.StrSchema
            __annotations__ = {
                "severity": severity,
                "title": title,
                "lastOccurence": lastOccurence,
                "condition": condition,
                "caseAutomation": caseAutomation,
                "faultId": faultId,
                "category": category,
                "openCases": openCases,
                "affectedAssets": affectedAssets,
                "occurences": occurences,
                "ignoredAssets": ignoredAssets,
                "mgmtSystemType": mgmtSystemType,
                "mgmtSystemAddr": mgmtSystemAddr,
                "mgmtSystemHostname": mgmtSystemHostname,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["severity"]) -> MetaOapg.properties.severity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastOccurence"]) -> MetaOapg.properties.lastOccurence: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condition"]) -> MetaOapg.properties.condition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["caseAutomation"]) -> MetaOapg.properties.caseAutomation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["faultId"]) -> MetaOapg.properties.faultId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["category"]) -> MetaOapg.properties.category: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["openCases"]) -> MetaOapg.properties.openCases: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["affectedAssets"]) -> MetaOapg.properties.affectedAssets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["occurences"]) -> MetaOapg.properties.occurences: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ignoredAssets"]) -> MetaOapg.properties.ignoredAssets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mgmtSystemType"]) -> MetaOapg.properties.mgmtSystemType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mgmtSystemAddr"]) -> MetaOapg.properties.mgmtSystemAddr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mgmtSystemHostname"]) -> MetaOapg.properties.mgmtSystemHostname: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["severity", "title", "lastOccurence", "condition", "caseAutomation", "faultId", "category", "openCases", "affectedAssets", "occurences", "ignoredAssets", "mgmtSystemType", "mgmtSystemAddr", "mgmtSystemHostname", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["severity"]) -> typing.Union[MetaOapg.properties.severity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastOccurence"]) -> typing.Union[MetaOapg.properties.lastOccurence, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condition"]) -> typing.Union[MetaOapg.properties.condition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["caseAutomation"]) -> typing.Union[MetaOapg.properties.caseAutomation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["faultId"]) -> typing.Union[MetaOapg.properties.faultId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["category"]) -> typing.Union[MetaOapg.properties.category, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["openCases"]) -> typing.Union[MetaOapg.properties.openCases, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["affectedAssets"]) -> typing.Union[MetaOapg.properties.affectedAssets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["occurences"]) -> typing.Union[MetaOapg.properties.occurences, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ignoredAssets"]) -> typing.Union[MetaOapg.properties.ignoredAssets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mgmtSystemType"]) -> typing.Union[MetaOapg.properties.mgmtSystemType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mgmtSystemAddr"]) -> typing.Union[MetaOapg.properties.mgmtSystemAddr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mgmtSystemHostname"]) -> typing.Union[MetaOapg.properties.mgmtSystemHostname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["severity", "title", "lastOccurence", "condition", "caseAutomation", "faultId", "category", "openCases", "affectedAssets", "occurences", "ignoredAssets", "mgmtSystemType", "mgmtSystemAddr", "mgmtSystemHostname", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        severity: typing.Union[MetaOapg.properties.severity, str, schemas.Unset] = schemas.unset,
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        lastOccurence: typing.Union[MetaOapg.properties.lastOccurence, str, datetime, schemas.Unset] = schemas.unset,
        condition: typing.Union[MetaOapg.properties.condition, str, schemas.Unset] = schemas.unset,
        caseAutomation: typing.Union[MetaOapg.properties.caseAutomation, str, schemas.Unset] = schemas.unset,
        faultId: typing.Union[MetaOapg.properties.faultId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        category: typing.Union[MetaOapg.properties.category, str, schemas.Unset] = schemas.unset,
        openCases: typing.Union[MetaOapg.properties.openCases, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        affectedAssets: typing.Union[MetaOapg.properties.affectedAssets, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        occurences: typing.Union[MetaOapg.properties.occurences, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ignoredAssets: typing.Union[MetaOapg.properties.ignoredAssets, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        mgmtSystemType: typing.Union[MetaOapg.properties.mgmtSystemType, str, schemas.Unset] = schemas.unset,
        mgmtSystemAddr: typing.Union[MetaOapg.properties.mgmtSystemAddr, str, schemas.Unset] = schemas.unset,
        mgmtSystemHostname: typing.Union[MetaOapg.properties.mgmtSystemHostname, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Faults':
        return super().__new__(
            cls,
            *_args,
            severity=severity,
            title=title,
            lastOccurence=lastOccurence,
            condition=condition,
            caseAutomation=caseAutomation,
            faultId=faultId,
            category=category,
            openCases=openCases,
            affectedAssets=affectedAssets,
            occurences=occurences,
            ignoredAssets=ignoredAssets,
            mgmtSystemType=mgmtSystemType,
            mgmtSystemAddr=mgmtSystemAddr,
            mgmtSystemHostname=mgmtSystemHostname,
            _configuration=_configuration,
            **kwargs,
        )
